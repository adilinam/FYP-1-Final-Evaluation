/**
 * <copyright>
 *
 * Copyright (c) 2011, 2013 Willink Transformations, University of York and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *		E.D.Willink - initial API and implementation
 *		Adolfo Sanchez-Barbudo Herrera - bug397429
 * 		
 * </copyright>
 *
 * 
 * Run As->MWE2 Workflow to regenerate QVTo models.
 */
module GenerateQVToAutoASModels

import org.eclipse.ocl.examples.build.utilities.*
import org.eclipse.ocl.examples.build.xtend.* 
import org.eclipse.emf.mwe.utils.*
import org.eclipse.emf.ecore.resource.impl.*

/**
 *	Generate the Pivot-based QVTo Models.
 */
/*
 * OCL related configuration variables
 */
var oclProjectName = "org.eclipse.ocl.pivot"
var oclProjectURI = "platform:/resource/${oclProjectName}"
var oclProjectPrefix = "Pivot"
var oclEcoreProjectPath = "model/Pivot.ecore"
var oclEcoreURI = "${oclProjectURI}/${oclEcoreProjectPath}"
var oclModelPackage = "${oclProjectName}"
var oclModelName = "pivot"
var oclVisitorPackage = "${oclModelPackage}.util"
var oclVisitorName = "Visitor"
var oclVisitorQualifiedName = "${oclVisitorPackage}.${oclVisitorName}"
var oclVisitablePackage = "${oclVisitorPackage}"
var oclVisitableName = "Visitable"

/*
 * ImperativeOCL related configuration variables
 */
var imperativeOclProjectName = "org.eclipse.qvto.examples.pivot.imperativeocl"
var imperativeOclProjectURI = "platform:/resource/${imperativeOclProjectName}"
var imperativeOclProjectPrefix = "ImperativeOCL"
var imperativeOclEcoreProjectPath = "model/ImperativeOCL.ecore"
var imperativeOclEcoreURI = "${imperativeOclProjectURI}/${imperativeOclEcoreProjectPath}"
var imperativeOclGenModelProjectPath = "model/${imperativeOclProjectPrefix}.genmodel"
var imperativeOclGenModelPath = "${imperativeOclProjectName}/${imperativeOclGenModelProjectPath}"
var imperativeOclModelPackage = "${imperativeOclProjectName}"
var imperativeOclModelName = "imperativeocl"
var imperativeOclVisitorPackage = "${imperativeOclProjectName}.util"
var imperativeOclVisitorName = "${imperativeOclProjectPrefix}Visitor"
var imperativeOclVisitorQualifiedName = "${imperativeOclVisitorPackage}.${imperativeOclVisitorName}"
var imperativeOclLookupFilePath = "model/ImperativeOCLLookup.ocl"

/*
 * QVTOperational related configuration variables
 */
var qvtOperationalProjectName = "org.eclipse.qvto.examples.pivot.qvtoperational"
var qvtOperationalProjectURI = "platform:/resource/${qvtOperationalProjectName}"
var qvtOperationalProjectPrefix = "QVTOperational"
var qvtOperationalEcoreProjectPath = "model/QVTOperational.ecore"
var qvtOperationalEcoreURI = "${qvtOperationalProjectURI}/${qvtOperationalEcoreProjectPath}"
var qvtOperationalGenModelProjectPath = "model/${qvtOperationalProjectPrefix}.genmodel"
var qvtOperationalGenModelPath = "${qvtOperationalProjectName}/${qvtOperationalGenModelProjectPath}"
var qvtOperationalModelPackage = "${qvtOperationalProjectName}"
var qvtOperationalModelName = "qvtoperational"
var qvtOperationalVisitorPackage = "${qvtOperationalProjectName}.util"
var qvtOperationalVisitorName = "${qvtOperationalProjectPrefix}Visitor"
var qvtOperationalVisitorQualifiedName = "${qvtOperationalVisitorPackage}.${qvtOperationalVisitorName}"
var qvtOperationalLookupFilePath = "model/QVTOperationalLookup.ocl"

/**
 *	Generate the Concrete Syntax Models used by the Xtext editors.
 */
Workflow {
	bean = ResourceSetImpl : resourceSet {}
    bean = StandaloneSetup { resourceSet = resourceSet
    	platformUri = ".."
    	scanClassPath = true
    }
    bean = EcoreGenModelSetup { resourceSet = resourceSet }

    
     component = @SubGenerateAutoASModel {	resourceSet = resourceSet
    	projectName = imperativeOclProjectName
    	projectPrefix = imperativeOclProjectPrefix 
    	superProjectName = oclProjectName
    	superProjectPrefix = oclProjectPrefix
    	baseProjectPrefix = oclProjectPrefix
    	baseVisitorPackage = oclVisitorPackage
    	genModelFile = imperativeOclGenModelProjectPath
    	lookupFilePath = imperativeOclLookupFilePath
    	modelPackageName = imperativeOclModelPackage
    	modelName = imperativeOclModelName
    	superModelName = oclModelName
    	visitorPackageName = imperativeOclVisitorPackage
    	visitorClassName = imperativeOclVisitorName
    	superVisitorPackageName = oclVisitorPackage
    	superVisitorClassName = oclVisitorName
    	visitablePackageName = oclVisitablePackage
    	visitableClassName = oclVisitableName
    }
          
   
   component = @SubGenerateAutoASModel {	resourceSet = resourceSet
    	projectName = qvtOperationalProjectName
    	projectPrefix =  qvtOperationalProjectPrefix
    	superProjectName = imperativeOclProjectName
    	superProjectPrefix = imperativeOclProjectPrefix
    	baseProjectPrefix = oclProjectPrefix
    	baseVisitorPackage = oclVisitorPackage
    	genModelFile = qvtOperationalGenModelProjectPath
    	lookupFilePath = qvtOperationalLookupFilePath
    	modelPackageName = qvtOperationalModelPackage
    	modelName = qvtOperationalModelName
    	superModelName = imperativeOclModelName
    	visitorPackageName = qvtOperationalVisitorPackage
    	visitorClassName = qvtOperationalVisitorName
    	superVisitorPackageName = imperativeOclVisitorPackage
    	superVisitorClassName = imperativeOclVisitorName
    	visitablePackageName = oclVisitablePackage
    	visitableClassName = oclVisitableName
    }
}