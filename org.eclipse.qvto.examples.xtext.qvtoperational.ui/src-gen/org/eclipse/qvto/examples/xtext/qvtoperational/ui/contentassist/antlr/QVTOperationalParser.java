/*
 * generated by Xtext
 */
package org.eclipse.qvto.examples.xtext.qvtoperational.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.eclipse.qvto.examples.xtext.qvtoperational.services.QVTOperationalGrammarAccess;

public class QVTOperationalParser extends AbstractContentAssistParser {
	
	@Inject
	private QVTOperationalGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.eclipse.qvto.examples.xtext.qvtoperational.ui.contentassist.antlr.internal.InternalQVTOperationalParser createParser() {
		org.eclipse.qvto.examples.xtext.qvtoperational.ui.contentassist.antlr.internal.InternalQVTOperationalParser result = new org.eclipse.qvto.examples.xtext.qvtoperational.ui.contentassist.antlr.internal.InternalQVTOperationalParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTopLevelCSAccess().getAlternatives_1(), "rule__TopLevelCS__Alternatives_1");
					put(grammarAccess.getTransformationQualifierAccess().getAlternatives(), "rule__TransformationQualifier__Alternatives");
					put(grammarAccess.getFeatureQualifierAccess().getAlternatives(), "rule__FeatureQualifier__Alternatives");
					put(grammarAccess.getImportCSAccess().getAlternatives(), "rule__ImportCS__Alternatives");
					put(grammarAccess.getImportCSAccess().getAlternatives_1_3(), "rule__ImportCS__Alternatives_1_3");
					put(grammarAccess.getUnitTypeCSAccess().getAlternatives(), "rule__UnitTypeCS__Alternatives");
					put(grammarAccess.getMetamodelCSAccess().getAlternatives_3(), "rule__MetamodelCS__Alternatives_3");
					put(grammarAccess.getClassCSAccess().getAlternatives_0(), "rule__ClassCS__Alternatives_0");
					put(grammarAccess.getDataTypeCSAccess().getAlternatives_0(), "rule__DataTypeCS__Alternatives_0");
					put(grammarAccess.getQVToClassCSAccess().getAlternatives_4_1_0(), "rule__QVToClassCS__Alternatives_4_1_0");
					put(grammarAccess.getTypedRef2CSAccess().getAlternatives(), "rule__TypedRef2CS__Alternatives");
					put(grammarAccess.getTagCSAccess().getNameAlternatives_1_0(), "rule__TagCS__NameAlternatives_1_0");
					put(grammarAccess.getTransformationCSAccess().getAlternatives(), "rule__TransformationCS__Alternatives");
					put(grammarAccess.getTransformationDefCSAccess().getAlternatives_2(), "rule__TransformationDefCS__Alternatives_2");
					put(grammarAccess.getLibraryCSAccess().getAlternatives(), "rule__LibraryCS__Alternatives");
					put(grammarAccess.getLibraryDefCSAccess().getAlternatives_2(), "rule__LibraryDefCS__Alternatives_2");
					put(grammarAccess.getPackageRefCSAccess().getAlternatives(), "rule__PackageRefCS__Alternatives");
					put(grammarAccess.getMappingOperationCSAccess().getAlternatives(), "rule__MappingOperationCS__Alternatives");
					put(grammarAccess.getImperativeOCLReservedKeywordAccess().getAlternatives(), "rule__ImperativeOCLReservedKeyword__Alternatives");
					put(grammarAccess.getImperativeOCLPrefixOperatorAccess().getAlternatives(), "rule__ImperativeOCLPrefixOperator__Alternatives");
					put(grammarAccess.getImperativeOCLInfixOperatorAccess().getAlternatives(), "rule__ImperativeOCLInfixOperator__Alternatives");
					put(grammarAccess.getTypeLiteralCSAccess().getAlternatives(), "rule__TypeLiteralCS__Alternatives");
					put(grammarAccess.getPrimaryExpCSAccess().getAlternatives(), "rule__PrimaryExpCS__Alternatives");
					put(grammarAccess.getStringLiteralAccess().getAlternatives(), "rule__StringLiteral__Alternatives");
					put(grammarAccess.getEssentialOCLReservedKeywordAccess().getAlternatives(), "rule__EssentialOCLReservedKeyword__Alternatives");
					put(grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getAlternatives(), "rule__EssentialOCLUnaryOperatorName__Alternatives");
					put(grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAlternatives(), "rule__EssentialOCLInfixOperatorName__Alternatives");
					put(grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getAlternatives(), "rule__EssentialOCLNavigationOperatorName__Alternatives");
					put(grammarAccess.getBinaryOperatorNameAccess().getAlternatives(), "rule__BinaryOperatorName__Alternatives");
					put(grammarAccess.getEssentialOCLUnreservedNameAccess().getAlternatives(), "rule__EssentialOCLUnreservedName__Alternatives");
					put(grammarAccess.getURIFirstPathElementCSAccess().getAlternatives(), "rule__URIFirstPathElementCS__Alternatives");
					put(grammarAccess.getPrimitiveTypeIdentifierAccess().getAlternatives(), "rule__PrimitiveTypeIdentifier__Alternatives");
					put(grammarAccess.getCollectionTypeIdentifierAccess().getAlternatives(), "rule__CollectionTypeIdentifier__Alternatives");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getAlternatives(), "rule__CollectionLiteralPartCS__Alternatives");
					put(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionAlternatives_2_0(), "rule__ShadowPartCS__OwnedInitExpressionAlternatives_2_0");
					put(grammarAccess.getPrimitiveLiteralExpCSAccess().getAlternatives(), "rule__PrimitiveLiteralExpCS__Alternatives");
					put(grammarAccess.getBooleanLiteralExpCSAccess().getAlternatives(), "rule__BooleanLiteralExpCS__Alternatives");
					put(grammarAccess.getTypeExpCSAccess().getAlternatives_0(), "rule__TypeExpCS__Alternatives_0");
					put(grammarAccess.getExpCSAccess().getAlternatives(), "rule__ExpCS__Alternatives");
					put(grammarAccess.getPrefixedLetExpCSAccess().getAlternatives(), "rule__PrefixedLetExpCS__Alternatives");
					put(grammarAccess.getPrefixedPrimaryExpCSAccess().getAlternatives(), "rule__PrefixedPrimaryExpCS__Alternatives");
					put(grammarAccess.getCurlyBracketedClauseCSAccess().getAlternatives_2(), "rule__CurlyBracketedClauseCS__Alternatives_2");
					put(grammarAccess.getNavigatingArgCSAccess().getAlternatives(), "rule__NavigatingArgCS__Alternatives");
					put(grammarAccess.getNavigatingArgCSAccess().getAlternatives_0_1(), "rule__NavigatingArgCS__Alternatives_0_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getAlternatives_2(), "rule__NavigatingCommaArgCS__Alternatives_2");
					put(grammarAccess.getIfExpCSAccess().getOwnedConditionAlternatives_1_0(), "rule__IfExpCS__OwnedConditionAlternatives_1_0");
					put(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAlternatives_0(), "rule__MultiplicityStringCS__StringBoundsAlternatives_0");
					put(grammarAccess.getTypeRefCSAccess().getAlternatives(), "rule__TypeRefCS__Alternatives");
					put(grammarAccess.getIDAccess().getAlternatives(), "rule__ID__Alternatives");
					put(grammarAccess.getUPPERAccess().getAlternatives(), "rule__UPPER__Alternatives");
					put(grammarAccess.getInitOpAccess().getAlternatives(), "rule__InitOp__Alternatives");
					put(grammarAccess.getMetamodelKindAccess().getAlternatives(), "rule__MetamodelKind__Alternatives");
					put(grammarAccess.getDirectionKindCSAccess().getAlternatives(), "rule__DirectionKindCS__Alternatives");
					put(grammarAccess.getImportKindEnumAccess().getAlternatives(), "rule__ImportKindEnum__Alternatives");
					put(grammarAccess.getModuleKindEnumAccess().getAlternatives(), "rule__ModuleKindEnum__Alternatives");
					put(grammarAccess.getTopLevelCSAccess().getGroup(), "rule__TopLevelCS__Group__0");
					put(grammarAccess.getPathName2CSAccess().getGroup(), "rule__PathName2CS__Group__0");
					put(grammarAccess.getPathName2CSAccess().getGroup_1(), "rule__PathName2CS__Group_1__0");
					put(grammarAccess.getImportCSAccess().getGroup_0(), "rule__ImportCS__Group_0__0");
					put(grammarAccess.getImportCSAccess().getGroup_1(), "rule__ImportCS__Group_1__0");
					put(grammarAccess.getImportCSAccess().getGroup_1_3_0(), "rule__ImportCS__Group_1_3_0__0");
					put(grammarAccess.getImportCSAccess().getGroup_1_3_0_1(), "rule__ImportCS__Group_1_3_0_1__0");
					put(grammarAccess.getUnitCSAccess().getGroup(), "rule__UnitCS__Group__0");
					put(grammarAccess.getUnitCSAccess().getGroup_1(), "rule__UnitCS__Group_1__0");
					put(grammarAccess.getParameterCSAccess().getGroup(), "rule__ParameterCS__Group__0");
					put(grammarAccess.getParameterCSAccess().getGroup_1(), "rule__ParameterCS__Group_1__0");
					put(grammarAccess.getParameterDeclarationCSAccess().getGroup(), "rule__ParameterDeclarationCS__Group__0");
					put(grammarAccess.getParameterDeclarationCSAccess().getGroup_2(), "rule__ParameterDeclarationCS__Group_2__0");
					put(grammarAccess.getInitPartCSAccess().getGroup(), "rule__InitPartCS__Group__0");
					put(grammarAccess.getTypeSpecCSAccess().getGroup(), "rule__TypeSpecCS__Group__0");
					put(grammarAccess.getTypeSpecCSAccess().getGroup_1(), "rule__TypeSpecCS__Group_1__0");
					put(grammarAccess.getMetamodelCSAccess().getGroup(), "rule__MetamodelCS__Group__0");
					put(grammarAccess.getClassCSAccess().getGroup(), "rule__ClassCS__Group__0");
					put(grammarAccess.getDataTypeCSAccess().getGroup(), "rule__DataTypeCS__Group__0");
					put(grammarAccess.getDataTypeCSAccess().getGroup_0_1(), "rule__DataTypeCS__Group_0_1__0");
					put(grammarAccess.getExceptionCSAccess().getGroup(), "rule__ExceptionCS__Group__0");
					put(grammarAccess.getExceptionCSAccess().getGroup_2(), "rule__ExceptionCS__Group_2__0");
					put(grammarAccess.getExceptionCSAccess().getGroup_2_1(), "rule__ExceptionCS__Group_2_1__0");
					put(grammarAccess.getExceptionCSAccess().getGroup_2_1_1(), "rule__ExceptionCS__Group_2_1_1__0");
					put(grammarAccess.getQVToClassCSAccess().getGroup(), "rule__QVToClassCS__Group__0");
					put(grammarAccess.getQVToClassCSAccess().getGroup_3(), "rule__QVToClassCS__Group_3__0");
					put(grammarAccess.getQVToClassCSAccess().getGroup_3_1(), "rule__QVToClassCS__Group_3_1__0");
					put(grammarAccess.getQVToClassCSAccess().getGroup_3_1_1(), "rule__QVToClassCS__Group_3_1_1__0");
					put(grammarAccess.getQVToClassCSAccess().getGroup_4(), "rule__QVToClassCS__Group_4__0");
					put(grammarAccess.getQVToClassCSAccess().getGroup_4_1(), "rule__QVToClassCS__Group_4_1__0");
					put(grammarAccess.getTypedMultiplicityRef2CSAccess().getGroup(), "rule__TypedMultiplicityRef2CS__Group__0");
					put(grammarAccess.getTypedTypeRef2CSAccess().getGroup(), "rule__TypedTypeRef2CS__Group__0");
					put(grammarAccess.getTypedTypeRef2CSAccess().getGroup_1(), "rule__TypedTypeRef2CS__Group_1__0");
					put(grammarAccess.getClassifierPropertyCSAccess().getGroup(), "rule__ClassifierPropertyCS__Group__0");
					put(grammarAccess.getClassifierPropertyCSAccess().getGroup_6(), "rule__ClassifierPropertyCS__Group_6__0");
					put(grammarAccess.getStereotypeQualifierCSAccess().getGroup(), "rule__StereotypeQualifierCS__Group__0");
					put(grammarAccess.getStereotypeQualifierCSAccess().getGroup_1(), "rule__StereotypeQualifierCS__Group_1__0");
					put(grammarAccess.getStereotypeQualifierCSAccess().getGroup_1_1(), "rule__StereotypeQualifierCS__Group_1_1__0");
					put(grammarAccess.getMultiplicityCSAccess().getGroup(), "rule__MultiplicityCS__Group__0");
					put(grammarAccess.getMultiplicityCSAccess().getGroup_1(), "rule__MultiplicityCS__Group_1__0");
					put(grammarAccess.getClassifierOperationCSAccess().getGroup(), "rule__ClassifierOperationCS__Group__0");
					put(grammarAccess.getClassifierOperationCSAccess().getGroup_4(), "rule__ClassifierOperationCS__Group_4__0");
					put(grammarAccess.getClassifierOperationCSAccess().getGroup_4_1(), "rule__ClassifierOperationCS__Group_4_1__0");
					put(grammarAccess.getClassifierOperationCSAccess().getGroup_6(), "rule__ClassifierOperationCS__Group_6__0");
					put(grammarAccess.getEnumerationCSAccess().getGroup(), "rule__EnumerationCS__Group__0");
					put(grammarAccess.getEnumerationCSAccess().getGroup_2(), "rule__EnumerationCS__Group_2__0");
					put(grammarAccess.getEnumerationCSAccess().getGroup_2_1(), "rule__EnumerationCS__Group_2_1__0");
					put(grammarAccess.getEnumerationCSAccess().getGroup_2_1_1(), "rule__EnumerationCS__Group_2_1_1__0");
					put(grammarAccess.getTagCSAccess().getGroup(), "rule__TagCS__Group__0");
					put(grammarAccess.getTagCSAccess().getGroup_3(), "rule__TagCS__Group_3__0");
					put(grammarAccess.getModuleRefCSAccess().getGroup(), "rule__ModuleRefCS__Group__0");
					put(grammarAccess.getModuleRefCSAccess().getGroup_1(), "rule__ModuleRefCS__Group_1__0");
					put(grammarAccess.getModuleRefCSAccess().getGroup_1_2(), "rule__ModuleRefCS__Group_1_2__0");
					put(grammarAccess.getModuleUsageCSAccess().getGroup(), "rule__ModuleUsageCS__Group__0");
					put(grammarAccess.getModuleUsageCSAccess().getGroup_3(), "rule__ModuleUsageCS__Group_3__0");
					put(grammarAccess.getTransformationDeclCSAccess().getGroup(), "rule__TransformationDeclCS__Group__0");
					put(grammarAccess.getTransformationDefCSAccess().getGroup(), "rule__TransformationDefCS__Group__0");
					put(grammarAccess.getTransformationHeaderCSAccess().getGroup(), "rule__TransformationHeaderCS__Group__0");
					put(grammarAccess.getTransformationHeaderCSAccess().getGroup_5(), "rule__TransformationHeaderCS__Group_5__0");
					put(grammarAccess.getTransformationHeaderCSAccess().getGroup_8(), "rule__TransformationHeaderCS__Group_8__0");
					put(grammarAccess.getLibraryDeclCSAccess().getGroup(), "rule__LibraryDeclCS__Group__0");
					put(grammarAccess.getLibraryDefCSAccess().getGroup(), "rule__LibraryDefCS__Group__0");
					put(grammarAccess.getLibraryHeaderCSAccess().getGroup(), "rule__LibraryHeaderCS__Group__0");
					put(grammarAccess.getLibraryHeaderCSAccess().getGroup_5(), "rule__LibraryHeaderCS__Group_5__0");
					put(grammarAccess.getModelTypeCSAccess().getGroup(), "rule__ModelTypeCS__Group__0");
					put(grammarAccess.getModelTypeCSAccess().getGroup_5(), "rule__ModelTypeCS__Group_5__0");
					put(grammarAccess.getModelTypeCSAccess().getGroup_6(), "rule__ModelTypeCS__Group_6__0");
					put(grammarAccess.getPackageRefCSAccess().getGroup_1(), "rule__PackageRefCS__Group_1__0");
					put(grammarAccess.getMappingDeclarationCSAccess().getGroup(), "rule__MappingDeclarationCS__Group__0");
					put(grammarAccess.getMappingDefinitionCSAccess().getGroup(), "rule__MappingDefinitionCS__Group__0");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getGroup(), "rule__MappingOperationHeaderCS__Group__0");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getGroup_5(), "rule__MappingOperationHeaderCS__Group_5__0");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getGroup_5_1(), "rule__MappingOperationHeaderCS__Group_5_1__0");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getGroup_7(), "rule__MappingOperationHeaderCS__Group_7__0");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getGroup_7_2(), "rule__MappingOperationHeaderCS__Group_7_2__0");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getGroup_8_0(), "rule__MappingOperationHeaderCS__Group_8_0__0");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getGroup_8_0_2(), "rule__MappingOperationHeaderCS__Group_8_0_2__0");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getGroup_8_1(), "rule__MappingOperationHeaderCS__Group_8_1__0");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getGroup_8_1_2(), "rule__MappingOperationHeaderCS__Group_8_1_2__0");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getGroup_8_2(), "rule__MappingOperationHeaderCS__Group_8_2__0");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getGroup_8_2_2(), "rule__MappingOperationHeaderCS__Group_8_2_2__0");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getGroup_8_3(), "rule__MappingOperationHeaderCS__Group_8_3__0");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getGroup_9(), "rule__MappingOperationHeaderCS__Group_9__0");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getGroup_10(), "rule__MappingOperationHeaderCS__Group_10__0");
					put(grammarAccess.getListTypeCSAccess().getGroup(), "rule__ListTypeCS__Group__0");
					put(grammarAccess.getDictTypeCSAccess().getGroup(), "rule__DictTypeCS__Group__0");
					put(grammarAccess.getListLiteralExpCSAccess().getGroup(), "rule__ListLiteralExpCS__Group__0");
					put(grammarAccess.getListLiteralExpCSAccess().getGroup_3(), "rule__ListLiteralExpCS__Group_3__0");
					put(grammarAccess.getListLiteralExpCSAccess().getGroup_3_1(), "rule__ListLiteralExpCS__Group_3_1__0");
					put(grammarAccess.getDictLiteralExpCSAccess().getGroup(), "rule__DictLiteralExpCS__Group__0");
					put(grammarAccess.getDictLiteralExpCSAccess().getGroup_3(), "rule__DictLiteralExpCS__Group_3__0");
					put(grammarAccess.getDictLiteralExpCSAccess().getGroup_3_1(), "rule__DictLiteralExpCS__Group_3_1__0");
					put(grammarAccess.getDictLiteralPartCSAccess().getGroup(), "rule__DictLiteralPartCS__Group__0");
					put(grammarAccess.getReturnExpCSAccess().getGroup(), "rule__ReturnExpCS__Group__0");
					put(grammarAccess.getBlockExpCSAccess().getGroup(), "rule__BlockExpCS__Group__0");
					put(grammarAccess.getURIPathNameCSAccess().getGroup(), "rule__URIPathNameCS__Group__0");
					put(grammarAccess.getURIPathNameCSAccess().getGroup_1(), "rule__URIPathNameCS__Group_1__0");
					put(grammarAccess.getURIFirstPathElementCSAccess().getGroup_1(), "rule__URIFirstPathElementCS__Group_1__0");
					put(grammarAccess.getCollectionTypeCSAccess().getGroup(), "rule__CollectionTypeCS__Group__0");
					put(grammarAccess.getCollectionTypeCSAccess().getGroup_1(), "rule__CollectionTypeCS__Group_1__0");
					put(grammarAccess.getMapTypeCSAccess().getGroup(), "rule__MapTypeCS__Group__0");
					put(grammarAccess.getMapTypeCSAccess().getGroup_1(), "rule__MapTypeCS__Group_1__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup(), "rule__TupleTypeCS__Group__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1(), "rule__TupleTypeCS__Group_1__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1_1(), "rule__TupleTypeCS__Group_1_1__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1_1_1(), "rule__TupleTypeCS__Group_1_1_1__0");
					put(grammarAccess.getTuplePartCSAccess().getGroup(), "rule__TuplePartCS__Group__0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getGroup(), "rule__CollectionLiteralExpCS__Group__0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_2(), "rule__CollectionLiteralExpCS__Group_2__0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_2_1(), "rule__CollectionLiteralExpCS__Group_2_1__0");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getGroup_0(), "rule__CollectionLiteralPartCS__Group_0__0");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getGroup_0_1(), "rule__CollectionLiteralPartCS__Group_0_1__0");
					put(grammarAccess.getCollectionPatternCSAccess().getGroup(), "rule__CollectionPatternCS__Group__0");
					put(grammarAccess.getCollectionPatternCSAccess().getGroup_2(), "rule__CollectionPatternCS__Group_2__0");
					put(grammarAccess.getCollectionPatternCSAccess().getGroup_2_1(), "rule__CollectionPatternCS__Group_2_1__0");
					put(grammarAccess.getCollectionPatternCSAccess().getGroup_2_2(), "rule__CollectionPatternCS__Group_2_2__0");
					put(grammarAccess.getShadowPartCSAccess().getGroup(), "rule__ShadowPartCS__Group__0");
					put(grammarAccess.getPatternExpCSAccess().getGroup(), "rule__PatternExpCS__Group__0");
					put(grammarAccess.getLambdaLiteralExpCSAccess().getGroup(), "rule__LambdaLiteralExpCS__Group__0");
					put(grammarAccess.getMapLiteralExpCSAccess().getGroup(), "rule__MapLiteralExpCS__Group__0");
					put(grammarAccess.getMapLiteralExpCSAccess().getGroup_2(), "rule__MapLiteralExpCS__Group_2__0");
					put(grammarAccess.getMapLiteralExpCSAccess().getGroup_2_1(), "rule__MapLiteralExpCS__Group_2_1__0");
					put(grammarAccess.getMapLiteralPartCSAccess().getGroup(), "rule__MapLiteralPartCS__Group__0");
					put(grammarAccess.getTupleLiteralExpCSAccess().getGroup(), "rule__TupleLiteralExpCS__Group__0");
					put(grammarAccess.getTupleLiteralExpCSAccess().getGroup_3(), "rule__TupleLiteralExpCS__Group_3__0");
					put(grammarAccess.getTupleLiteralPartCSAccess().getGroup(), "rule__TupleLiteralPartCS__Group__0");
					put(grammarAccess.getTupleLiteralPartCSAccess().getGroup_1(), "rule__TupleLiteralPartCS__Group_1__0");
					put(grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getGroup(), "rule__UnlimitedNaturalLiteralExpCS__Group__0");
					put(grammarAccess.getInvalidLiteralExpCSAccess().getGroup(), "rule__InvalidLiteralExpCS__Group__0");
					put(grammarAccess.getNullLiteralExpCSAccess().getGroup(), "rule__NullLiteralExpCS__Group__0");
					put(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getGroup(), "rule__TypeLiteralWithMultiplicityCS__Group__0");
					put(grammarAccess.getTypeNameExpCSAccess().getGroup(), "rule__TypeNameExpCS__Group__0");
					put(grammarAccess.getTypeNameExpCSAccess().getGroup_1(), "rule__TypeNameExpCS__Group_1__0");
					put(grammarAccess.getTypeNameExpCSAccess().getGroup_1_1(), "rule__TypeNameExpCS__Group_1_1__0");
					put(grammarAccess.getTypeExpCSAccess().getGroup(), "rule__TypeExpCS__Group__0");
					put(grammarAccess.getExpCSAccess().getGroup_0(), "rule__ExpCS__Group_0__0");
					put(grammarAccess.getExpCSAccess().getGroup_0_1(), "rule__ExpCS__Group_0_1__0");
					put(grammarAccess.getPrefixedLetExpCSAccess().getGroup_0(), "rule__PrefixedLetExpCS__Group_0__0");
					put(grammarAccess.getPrefixedPrimaryExpCSAccess().getGroup_0(), "rule__PrefixedPrimaryExpCS__Group_0__0");
					put(grammarAccess.getNameExpCSAccess().getGroup(), "rule__NameExpCS__Group__0");
					put(grammarAccess.getNameExpCSAccess().getGroup_4(), "rule__NameExpCS__Group_4__0");
					put(grammarAccess.getCurlyBracketedClauseCSAccess().getGroup(), "rule__CurlyBracketedClauseCS__Group__0");
					put(grammarAccess.getCurlyBracketedClauseCSAccess().getGroup_2_0(), "rule__CurlyBracketedClauseCS__Group_2_0__0");
					put(grammarAccess.getCurlyBracketedClauseCSAccess().getGroup_2_0_1(), "rule__CurlyBracketedClauseCS__Group_2_0_1__0");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getGroup(), "rule__RoundBracketedClauseCS__Group__0");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getGroup_2(), "rule__RoundBracketedClauseCS__Group_2__0");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getGroup_2_2(), "rule__RoundBracketedClauseCS__Group_2_2__0");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getGroup_2_3(), "rule__RoundBracketedClauseCS__Group_2_3__0");
					put(grammarAccess.getSquareBracketedClauseCSAccess().getGroup(), "rule__SquareBracketedClauseCS__Group__0");
					put(grammarAccess.getSquareBracketedClauseCSAccess().getGroup_2(), "rule__SquareBracketedClauseCS__Group_2__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup_0(), "rule__NavigatingArgCS__Group_0__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup_0_1_0(), "rule__NavigatingArgCS__Group_0_1_0__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup_0_1_0_2(), "rule__NavigatingArgCS__Group_0_1_0_2__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup_0_1_1(), "rule__NavigatingArgCS__Group_0_1_1__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup_1(), "rule__NavigatingArgCS__Group_1__0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getGroup(), "rule__NavigatingBarArgCS__Group__0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getGroup_2(), "rule__NavigatingBarArgCS__Group_2__0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getGroup_2_2(), "rule__NavigatingBarArgCS__Group_2_2__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup(), "rule__NavigatingCommaArgCS__Group__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_2_0(), "rule__NavigatingCommaArgCS__Group_2_0__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_2_0_2(), "rule__NavigatingCommaArgCS__Group_2_0_2__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_2_1(), "rule__NavigatingCommaArgCS__Group_2_1__0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getGroup(), "rule__NavigatingSemiArgCS__Group__0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getGroup_2(), "rule__NavigatingSemiArgCS__Group_2__0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getGroup_2_2(), "rule__NavigatingSemiArgCS__Group_2_2__0");
					put(grammarAccess.getIfExpCSAccess().getGroup(), "rule__IfExpCS__Group__0");
					put(grammarAccess.getElseIfThenExpCSAccess().getGroup(), "rule__ElseIfThenExpCS__Group__0");
					put(grammarAccess.getLetExpCSAccess().getGroup(), "rule__LetExpCS__Group__0");
					put(grammarAccess.getLetExpCSAccess().getGroup_2(), "rule__LetExpCS__Group_2__0");
					put(grammarAccess.getLetVariableCSAccess().getGroup(), "rule__LetVariableCS__Group__0");
					put(grammarAccess.getLetVariableCSAccess().getGroup_2(), "rule__LetVariableCS__Group_2__0");
					put(grammarAccess.getNestedExpCSAccess().getGroup(), "rule__NestedExpCS__Group__0");
					put(grammarAccess.getSelfExpCSAccess().getGroup(), "rule__SelfExpCS__Group__0");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getGroup(), "rule__MultiplicityBoundsCS__Group__0");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getGroup_1(), "rule__MultiplicityBoundsCS__Group_1__0");
					put(grammarAccess.getPathNameCSAccess().getGroup(), "rule__PathNameCS__Group__0");
					put(grammarAccess.getPathNameCSAccess().getGroup_1(), "rule__PathNameCS__Group_1__0");
					put(grammarAccess.getTemplateBindingCSAccess().getGroup(), "rule__TemplateBindingCS__Group__0");
					put(grammarAccess.getTemplateBindingCSAccess().getGroup_1(), "rule__TemplateBindingCS__Group_1__0");
					put(grammarAccess.getTemplateSignatureCSAccess().getGroup(), "rule__TemplateSignatureCS__Group__0");
					put(grammarAccess.getTemplateSignatureCSAccess().getGroup_2(), "rule__TemplateSignatureCS__Group_2__0");
					put(grammarAccess.getTypeParameterCSAccess().getGroup(), "rule__TypeParameterCS__Group__0");
					put(grammarAccess.getTypeParameterCSAccess().getGroup_1(), "rule__TypeParameterCS__Group_1__0");
					put(grammarAccess.getTypeParameterCSAccess().getGroup_1_2(), "rule__TypeParameterCS__Group_1_2__0");
					put(grammarAccess.getTypedTypeRefCSAccess().getGroup(), "rule__TypedTypeRefCS__Group__0");
					put(grammarAccess.getTypedTypeRefCSAccess().getGroup_1(), "rule__TypedTypeRefCS__Group_1__0");
					put(grammarAccess.getWildcardTypeRefCSAccess().getGroup(), "rule__WildcardTypeRefCS__Group__0");
					put(grammarAccess.getWildcardTypeRefCSAccess().getGroup_2(), "rule__WildcardTypeRefCS__Group_2__0");
					put(grammarAccess.getTopLevelCSAccess().getOwnedImportsAssignment_0(), "rule__TopLevelCS__OwnedImportsAssignment_0");
					put(grammarAccess.getTopLevelCSAccess().getOwnedPackagesAssignment_1_0(), "rule__TopLevelCS__OwnedPackagesAssignment_1_0");
					put(grammarAccess.getTopLevelCSAccess().getOwnedTypesAssignment_1_1(), "rule__TopLevelCS__OwnedTypesAssignment_1_1");
					put(grammarAccess.getPathName2CSAccess().getOwnedPathElements2Assignment_0(), "rule__PathName2CS__OwnedPathElements2Assignment_0");
					put(grammarAccess.getPathName2CSAccess().getOwnedPathElements2Assignment_1_1(), "rule__PathName2CS__OwnedPathElements2Assignment_1_1");
					put(grammarAccess.getPathElement2CSAccess().getNameAssignment(), "rule__PathElement2CS__NameAssignment");
					put(grammarAccess.getImportCSAccess().getUnitAssignment_0_1(), "rule__ImportCS__UnitAssignment_0_1");
					put(grammarAccess.getImportCSAccess().getUnitAssignment_1_1(), "rule__ImportCS__UnitAssignment_1_1");
					put(grammarAccess.getImportCSAccess().getImportedUnitElementAssignment_1_3_0_0(), "rule__ImportCS__ImportedUnitElementAssignment_1_3_0_0");
					put(grammarAccess.getImportCSAccess().getImportedUnitElementAssignment_1_3_0_1_1(), "rule__ImportCS__ImportedUnitElementAssignment_1_3_0_1_1");
					put(grammarAccess.getImportCSAccess().getIsAllAssignment_1_3_1(), "rule__ImportCS__IsAllAssignment_1_3_1");
					put(grammarAccess.getUnitCSAccess().getSegmentAssignment_0(), "rule__UnitCS__SegmentAssignment_0");
					put(grammarAccess.getUnitCSAccess().getSegmentAssignment_1_1(), "rule__UnitCS__SegmentAssignment_1_1");
					put(grammarAccess.getParameterCSAccess().getNameAssignment_0(), "rule__ParameterCS__NameAssignment_0");
					put(grammarAccess.getParameterCSAccess().getOwnedTypeAssignment_1_1(), "rule__ParameterCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getParameterDeclarationCSAccess().getDirectionAssignment_0(), "rule__ParameterDeclarationCS__DirectionAssignment_0");
					put(grammarAccess.getParameterDeclarationCSAccess().getNameAssignment_1(), "rule__ParameterDeclarationCS__NameAssignment_1");
					put(grammarAccess.getParameterDeclarationCSAccess().getOwnedTypeAssignment_2_1(), "rule__ParameterDeclarationCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getParameterDeclarationCSAccess().getInitPartAssignment_3(), "rule__ParameterDeclarationCS__InitPartAssignment_3");
					put(grammarAccess.getInitPartCSAccess().getInitOpAssignment_0(), "rule__InitPartCS__InitOpAssignment_0");
					put(grammarAccess.getInitPartCSAccess().getExpressionAssignment_1(), "rule__InitPartCS__ExpressionAssignment_1");
					put(grammarAccess.getTypeSpecCSAccess().getOwnedTypeAssignment_0(), "rule__TypeSpecCS__OwnedTypeAssignment_0");
					put(grammarAccess.getTypeSpecCSAccess().getExtentLocationAssignment_1_1(), "rule__TypeSpecCS__ExtentLocationAssignment_1_1");
					put(grammarAccess.getMetamodelCSAccess().getMetamodelKindAssignment_0(), "rule__MetamodelCS__MetamodelKindAssignment_0");
					put(grammarAccess.getMetamodelCSAccess().getNameAssignment_1(), "rule__MetamodelCS__NameAssignment_1");
					put(grammarAccess.getMetamodelCSAccess().getOwnedClassesAssignment_3_0(), "rule__MetamodelCS__OwnedClassesAssignment_3_0");
					put(grammarAccess.getMetamodelCSAccess().getOwnedClassesAssignment_3_1(), "rule__MetamodelCS__OwnedClassesAssignment_3_1");
					put(grammarAccess.getMetamodelCSAccess().getOwnedAnnotationsAssignment_3_2(), "rule__MetamodelCS__OwnedAnnotationsAssignment_3_2");
					put(grammarAccess.getDataTypeCSAccess().getNameAssignment_1(), "rule__DataTypeCS__NameAssignment_1");
					put(grammarAccess.getExceptionCSAccess().getNameAssignment_1(), "rule__ExceptionCS__NameAssignment_1");
					put(grammarAccess.getExceptionCSAccess().getOwnedSuperTypesAssignment_2_1_0(), "rule__ExceptionCS__OwnedSuperTypesAssignment_2_1_0");
					put(grammarAccess.getExceptionCSAccess().getOwnedSuperTypesAssignment_2_1_1_1(), "rule__ExceptionCS__OwnedSuperTypesAssignment_2_1_1_1");
					put(grammarAccess.getQVToClassCSAccess().getIntermediateAssignment_0(), "rule__QVToClassCS__IntermediateAssignment_0");
					put(grammarAccess.getQVToClassCSAccess().getNameAssignment_2(), "rule__QVToClassCS__NameAssignment_2");
					put(grammarAccess.getQVToClassCSAccess().getOwnedSuperTypesAssignment_3_1_0(), "rule__QVToClassCS__OwnedSuperTypesAssignment_3_1_0");
					put(grammarAccess.getQVToClassCSAccess().getOwnedSuperTypesAssignment_3_1_1_1(), "rule__QVToClassCS__OwnedSuperTypesAssignment_3_1_1_1");
					put(grammarAccess.getQVToClassCSAccess().getOwnedPropertiesAssignment_4_1_0_0(), "rule__QVToClassCS__OwnedPropertiesAssignment_4_1_0_0");
					put(grammarAccess.getQVToClassCSAccess().getOwnedOperationsAssignment_4_1_0_1(), "rule__QVToClassCS__OwnedOperationsAssignment_4_1_0_1");
					put(grammarAccess.getQVToClassCSAccess().getOwnedAnnotationsAssignment_4_1_0_2(), "rule__QVToClassCS__OwnedAnnotationsAssignment_4_1_0_2");
					put(grammarAccess.getTypedMultiplicityRef2CSAccess().getOwnedMultiplicityAssignment_1(), "rule__TypedMultiplicityRef2CS__OwnedMultiplicityAssignment_1");
					put(grammarAccess.getTypedTypeRef2CSAccess().getOwnedPathNameAssignment_0(), "rule__TypedTypeRef2CS__OwnedPathNameAssignment_0");
					put(grammarAccess.getTypedTypeRef2CSAccess().getOwnedBindingAssignment_1_1(), "rule__TypedTypeRef2CS__OwnedBindingAssignment_1_1");
					put(grammarAccess.getClassifierPropertyCSAccess().getStereotypesAssignment_0(), "rule__ClassifierPropertyCS__StereotypesAssignment_0");
					put(grammarAccess.getClassifierPropertyCSAccess().getQualifiersAssignment_1(), "rule__ClassifierPropertyCS__QualifiersAssignment_1");
					put(grammarAccess.getClassifierPropertyCSAccess().getNameAssignment_2(), "rule__ClassifierPropertyCS__NameAssignment_2");
					put(grammarAccess.getClassifierPropertyCSAccess().getOwnedTypeAssignment_4(), "rule__ClassifierPropertyCS__OwnedTypeAssignment_4");
					put(grammarAccess.getClassifierPropertyCSAccess().getDefaultAssignment_5(), "rule__ClassifierPropertyCS__DefaultAssignment_5");
					put(grammarAccess.getClassifierPropertyCSAccess().getOppositeAssignment_6_2(), "rule__ClassifierPropertyCS__OppositeAssignment_6_2");
					put(grammarAccess.getStereotypeQualifierCSAccess().getStereotypeAssignment_1_0(), "rule__StereotypeQualifierCS__StereotypeAssignment_1_0");
					put(grammarAccess.getStereotypeQualifierCSAccess().getStereotypeAssignment_1_1_1(), "rule__StereotypeQualifierCS__StereotypeAssignment_1_1_1");
					put(grammarAccess.getMultiplicityCSAccess().getLowerBoundAssignment_1_0(), "rule__MultiplicityCS__LowerBoundAssignment_1_0");
					put(grammarAccess.getMultiplicityCSAccess().getUpperBoundAssignment_2(), "rule__MultiplicityCS__UpperBoundAssignment_2");
					put(grammarAccess.getClassifierOperationCSAccess().getStereotypesAssignment_0(), "rule__ClassifierOperationCS__StereotypesAssignment_0");
					put(grammarAccess.getClassifierOperationCSAccess().getQualifiersAssignment_1(), "rule__ClassifierOperationCS__QualifiersAssignment_1");
					put(grammarAccess.getClassifierOperationCSAccess().getNameAssignment_2(), "rule__ClassifierOperationCS__NameAssignment_2");
					put(grammarAccess.getClassifierOperationCSAccess().getOwnedParametersAssignment_4_0(), "rule__ClassifierOperationCS__OwnedParametersAssignment_4_0");
					put(grammarAccess.getClassifierOperationCSAccess().getOwnedParametersAssignment_4_1_1(), "rule__ClassifierOperationCS__OwnedParametersAssignment_4_1_1");
					put(grammarAccess.getClassifierOperationCSAccess().getOwnedTypeAssignment_6_1(), "rule__ClassifierOperationCS__OwnedTypeAssignment_6_1");
					put(grammarAccess.getEnumerationCSAccess().getNameAssignment_1(), "rule__EnumerationCS__NameAssignment_1");
					put(grammarAccess.getEnumerationCSAccess().getOwnedLiteralsAssignment_2_1_0(), "rule__EnumerationCS__OwnedLiteralsAssignment_2_1_0");
					put(grammarAccess.getEnumerationCSAccess().getOwnedLiteralsAssignment_2_1_1_1(), "rule__EnumerationCS__OwnedLiteralsAssignment_2_1_1_1");
					put(grammarAccess.getEnumerationLiteralCSAccess().getNameAssignment(), "rule__EnumerationLiteralCS__NameAssignment");
					put(grammarAccess.getTagCSAccess().getNameAssignment_1(), "rule__TagCS__NameAssignment_1");
					put(grammarAccess.getTagCSAccess().getElementPathAssignment_2(), "rule__TagCS__ElementPathAssignment_2");
					put(grammarAccess.getTagCSAccess().getExpressionAssignment_3_1(), "rule__TagCS__ExpressionAssignment_3_1");
					put(grammarAccess.getModuleRefCSAccess().getModulePathAssignment_0(), "rule__ModuleRefCS__ModulePathAssignment_0");
					put(grammarAccess.getModuleRefCSAccess().getParametersAssignment_1_1(), "rule__ModuleRefCS__ParametersAssignment_1_1");
					put(grammarAccess.getModuleRefCSAccess().getParametersAssignment_1_2_1(), "rule__ModuleRefCS__ParametersAssignment_1_2_1");
					put(grammarAccess.getModuleUsageCSAccess().getImportKindAssignment_0(), "rule__ModuleUsageCS__ImportKindAssignment_0");
					put(grammarAccess.getModuleUsageCSAccess().getModuleKindAssignment_1(), "rule__ModuleUsageCS__ModuleKindAssignment_1");
					put(grammarAccess.getModuleUsageCSAccess().getModuleRefsAssignment_2(), "rule__ModuleUsageCS__ModuleRefsAssignment_2");
					put(grammarAccess.getModuleUsageCSAccess().getModuleRefsAssignment_3_1(), "rule__ModuleUsageCS__ModuleRefsAssignment_3_1");
					put(grammarAccess.getTransformationDefCSAccess().getOwnedPropertiesAssignment_2_0(), "rule__TransformationDefCS__OwnedPropertiesAssignment_2_0");
					put(grammarAccess.getTransformationDefCSAccess().getOwnedOperationsAssignment_2_1(), "rule__TransformationDefCS__OwnedOperationsAssignment_2_1");
					put(grammarAccess.getTransformationHeaderCSAccess().getQualifiersAssignment_0(), "rule__TransformationHeaderCS__QualifiersAssignment_0");
					put(grammarAccess.getTransformationHeaderCSAccess().getNameAssignment_2(), "rule__TransformationHeaderCS__NameAssignment_2");
					put(grammarAccess.getTransformationHeaderCSAccess().getParametersAssignment_4(), "rule__TransformationHeaderCS__ParametersAssignment_4");
					put(grammarAccess.getTransformationHeaderCSAccess().getParametersAssignment_5_1(), "rule__TransformationHeaderCS__ParametersAssignment_5_1");
					put(grammarAccess.getTransformationHeaderCSAccess().getModuleUsagesAssignment_7(), "rule__TransformationHeaderCS__ModuleUsagesAssignment_7");
					put(grammarAccess.getTransformationHeaderCSAccess().getRefinesAssignment_8_1(), "rule__TransformationHeaderCS__RefinesAssignment_8_1");
					put(grammarAccess.getLibraryDefCSAccess().getOwnedPropertiesAssignment_2_0(), "rule__LibraryDefCS__OwnedPropertiesAssignment_2_0");
					put(grammarAccess.getLibraryDefCSAccess().getOwnedOperationsAssignment_2_1(), "rule__LibraryDefCS__OwnedOperationsAssignment_2_1");
					put(grammarAccess.getLibraryHeaderCSAccess().getQualifiersAssignment_0(), "rule__LibraryHeaderCS__QualifiersAssignment_0");
					put(grammarAccess.getLibraryHeaderCSAccess().getNameAssignment_2(), "rule__LibraryHeaderCS__NameAssignment_2");
					put(grammarAccess.getLibraryHeaderCSAccess().getParametersAssignment_4(), "rule__LibraryHeaderCS__ParametersAssignment_4");
					put(grammarAccess.getLibraryHeaderCSAccess().getParametersAssignment_5_1(), "rule__LibraryHeaderCS__ParametersAssignment_5_1");
					put(grammarAccess.getLibraryHeaderCSAccess().getModuleUsagesAssignment_7(), "rule__LibraryHeaderCS__ModuleUsagesAssignment_7");
					put(grammarAccess.getModelTypeCSAccess().getNameAssignment_1(), "rule__ModelTypeCS__NameAssignment_1");
					put(grammarAccess.getModelTypeCSAccess().getComplianceKindAssignment_2(), "rule__ModelTypeCS__ComplianceKindAssignment_2");
					put(grammarAccess.getModelTypeCSAccess().getPackageRefsAssignment_4(), "rule__ModelTypeCS__PackageRefsAssignment_4");
					put(grammarAccess.getModelTypeCSAccess().getPackageRefsAssignment_5_1(), "rule__ModelTypeCS__PackageRefsAssignment_5_1");
					put(grammarAccess.getModelTypeRefCSAccess().getOwnedTypeAssignment(), "rule__ModelTypeRefCS__OwnedTypeAssignment");
					put(grammarAccess.getPackageRefCSAccess().getUriAssignment_0(), "rule__PackageRefCS__UriAssignment_0");
					put(grammarAccess.getPackageRefCSAccess().getPackagePathAssignment_1_0(), "rule__PackageRefCS__PackagePathAssignment_1_0");
					put(grammarAccess.getPackageRefCSAccess().getUriAssignment_1_2(), "rule__PackageRefCS__UriAssignment_1_2");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getQualifiersAssignment_0(), "rule__MappingOperationHeaderCS__QualifiersAssignment_0");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getDirectionAssignment_2(), "rule__MappingOperationHeaderCS__DirectionAssignment_2");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getScopedNameAssignment_3(), "rule__MappingOperationHeaderCS__ScopedNameAssignment_3");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getOwnedParametersAssignment_5_0(), "rule__MappingOperationHeaderCS__OwnedParametersAssignment_5_0");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getOwnedParametersAssignment_5_1_1(), "rule__MappingOperationHeaderCS__OwnedParametersAssignment_5_1_1");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getResultsAssignment_7_1(), "rule__MappingOperationHeaderCS__ResultsAssignment_7_1");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getResultsAssignment_7_2_1(), "rule__MappingOperationHeaderCS__ResultsAssignment_7_2_1");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getInheritsAssignment_8_0_1(), "rule__MappingOperationHeaderCS__InheritsAssignment_8_0_1");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getInheritsAssignment_8_0_2_1(), "rule__MappingOperationHeaderCS__InheritsAssignment_8_0_2_1");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getMergesAssignment_8_1_1(), "rule__MappingOperationHeaderCS__MergesAssignment_8_1_1");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getMergesAssignment_8_1_2_1(), "rule__MappingOperationHeaderCS__MergesAssignment_8_1_2_1");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getDisjunctsAssignment_8_2_1(), "rule__MappingOperationHeaderCS__DisjunctsAssignment_8_2_1");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getDisjunctsAssignment_8_2_2_1(), "rule__MappingOperationHeaderCS__DisjunctsAssignment_8_2_2_1");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getRefinesAssignment_8_3_1(), "rule__MappingOperationHeaderCS__RefinesAssignment_8_3_1");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getWhenAssignment_9_1(), "rule__MappingOperationHeaderCS__WhenAssignment_9_1");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getWhereAssignment_10_1(), "rule__MappingOperationHeaderCS__WhereAssignment_10_1");
					put(grammarAccess.getListTypeCSAccess().getTypeAssignment_2(), "rule__ListTypeCS__TypeAssignment_2");
					put(grammarAccess.getDictTypeCSAccess().getKeyTypeAssignment_2(), "rule__DictTypeCS__KeyTypeAssignment_2");
					put(grammarAccess.getDictTypeCSAccess().getValueTypeAssignment_4(), "rule__DictTypeCS__ValueTypeAssignment_4");
					put(grammarAccess.getListLiteralExpCSAccess().getOwnedPartsAssignment_3_0(), "rule__ListLiteralExpCS__OwnedPartsAssignment_3_0");
					put(grammarAccess.getListLiteralExpCSAccess().getOwnedPartsAssignment_3_1_1(), "rule__ListLiteralExpCS__OwnedPartsAssignment_3_1_1");
					put(grammarAccess.getDictLiteralExpCSAccess().getOwnedPartsAssignment_3_0(), "rule__DictLiteralExpCS__OwnedPartsAssignment_3_0");
					put(grammarAccess.getDictLiteralExpCSAccess().getOwnedPartsAssignment_3_1_1(), "rule__DictLiteralExpCS__OwnedPartsAssignment_3_1_1");
					put(grammarAccess.getDictLiteralPartCSAccess().getKeyAssignment_0(), "rule__DictLiteralPartCS__KeyAssignment_0");
					put(grammarAccess.getDictLiteralPartCSAccess().getValueAssignment_2(), "rule__DictLiteralPartCS__ValueAssignment_2");
					put(grammarAccess.getReturnExpCSAccess().getValueAssignment_2(), "rule__ReturnExpCS__ValueAssignment_2");
					put(grammarAccess.getBlockExpCSAccess().getExpressionsAssignment_1(), "rule__BlockExpCS__ExpressionsAssignment_1");
					put(grammarAccess.getModelAccess().getOwnedExpressionAssignment(), "rule__Model__OwnedExpressionAssignment");
					put(grammarAccess.getURIPathNameCSAccess().getOwnedPathElementsAssignment_0(), "rule__URIPathNameCS__OwnedPathElementsAssignment_0");
					put(grammarAccess.getURIPathNameCSAccess().getOwnedPathElementsAssignment_1_1(), "rule__URIPathNameCS__OwnedPathElementsAssignment_1_1");
					put(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementAssignment_0(), "rule__URIFirstPathElementCS__ReferredElementAssignment_0");
					put(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementAssignment_1_1(), "rule__URIFirstPathElementCS__ReferredElementAssignment_1_1");
					put(grammarAccess.getPrimitiveTypeCSAccess().getNameAssignment(), "rule__PrimitiveTypeCS__NameAssignment");
					put(grammarAccess.getCollectionTypeCSAccess().getNameAssignment_0(), "rule__CollectionTypeCS__NameAssignment_0");
					put(grammarAccess.getCollectionTypeCSAccess().getOwnedTypeAssignment_1_1(), "rule__CollectionTypeCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getMapTypeCSAccess().getNameAssignment_0(), "rule__MapTypeCS__NameAssignment_0");
					put(grammarAccess.getMapTypeCSAccess().getOwnedKeyTypeAssignment_1_1(), "rule__MapTypeCS__OwnedKeyTypeAssignment_1_1");
					put(grammarAccess.getMapTypeCSAccess().getOwnedValueTypeAssignment_1_3(), "rule__MapTypeCS__OwnedValueTypeAssignment_1_3");
					put(grammarAccess.getTupleTypeCSAccess().getNameAssignment_0(), "rule__TupleTypeCS__NameAssignment_0");
					put(grammarAccess.getTupleTypeCSAccess().getOwnedPartsAssignment_1_1_0(), "rule__TupleTypeCS__OwnedPartsAssignment_1_1_0");
					put(grammarAccess.getTupleTypeCSAccess().getOwnedPartsAssignment_1_1_1_1(), "rule__TupleTypeCS__OwnedPartsAssignment_1_1_1_1");
					put(grammarAccess.getTuplePartCSAccess().getNameAssignment_0(), "rule__TuplePartCS__NameAssignment_0");
					put(grammarAccess.getTuplePartCSAccess().getOwnedTypeAssignment_2(), "rule__TuplePartCS__OwnedTypeAssignment_2");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedTypeAssignment_0(), "rule__CollectionLiteralExpCS__OwnedTypeAssignment_0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsAssignment_2_0(), "rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsAssignment_2_1_1(), "rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_1_1");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionAssignment_0_0(), "rule__CollectionLiteralPartCS__OwnedExpressionAssignment_0_0");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedLastExpressionAssignment_0_1_1(), "rule__CollectionLiteralPartCS__OwnedLastExpressionAssignment_0_1_1");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionAssignment_1(), "rule__CollectionLiteralPartCS__OwnedExpressionAssignment_1");
					put(grammarAccess.getCollectionPatternCSAccess().getOwnedTypeAssignment_0(), "rule__CollectionPatternCS__OwnedTypeAssignment_0");
					put(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsAssignment_2_0(), "rule__CollectionPatternCS__OwnedPartsAssignment_2_0");
					put(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsAssignment_2_1_1(), "rule__CollectionPatternCS__OwnedPartsAssignment_2_1_1");
					put(grammarAccess.getCollectionPatternCSAccess().getRestVariableNameAssignment_2_2_1(), "rule__CollectionPatternCS__RestVariableNameAssignment_2_2_1");
					put(grammarAccess.getShadowPartCSAccess().getReferredPropertyAssignment_0(), "rule__ShadowPartCS__ReferredPropertyAssignment_0");
					put(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionAssignment_2(), "rule__ShadowPartCS__OwnedInitExpressionAssignment_2");
					put(grammarAccess.getPatternExpCSAccess().getPatternVariableNameAssignment_0(), "rule__PatternExpCS__PatternVariableNameAssignment_0");
					put(grammarAccess.getPatternExpCSAccess().getOwnedPatternTypeAssignment_2(), "rule__PatternExpCS__OwnedPatternTypeAssignment_2");
					put(grammarAccess.getLambdaLiteralExpCSAccess().getOwnedExpressionCSAssignment_2(), "rule__LambdaLiteralExpCS__OwnedExpressionCSAssignment_2");
					put(grammarAccess.getMapLiteralExpCSAccess().getOwnedTypeAssignment_0(), "rule__MapLiteralExpCS__OwnedTypeAssignment_0");
					put(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsAssignment_2_0(), "rule__MapLiteralExpCS__OwnedPartsAssignment_2_0");
					put(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsAssignment_2_1_1(), "rule__MapLiteralExpCS__OwnedPartsAssignment_2_1_1");
					put(grammarAccess.getMapLiteralPartCSAccess().getOwnedKeyAssignment_0(), "rule__MapLiteralPartCS__OwnedKeyAssignment_0");
					put(grammarAccess.getMapLiteralPartCSAccess().getOwnedValueAssignment_2(), "rule__MapLiteralPartCS__OwnedValueAssignment_2");
					put(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsAssignment_2(), "rule__TupleLiteralExpCS__OwnedPartsAssignment_2");
					put(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsAssignment_3_1(), "rule__TupleLiteralExpCS__OwnedPartsAssignment_3_1");
					put(grammarAccess.getTupleLiteralPartCSAccess().getNameAssignment_0(), "rule__TupleLiteralPartCS__NameAssignment_0");
					put(grammarAccess.getTupleLiteralPartCSAccess().getOwnedTypeAssignment_1_1(), "rule__TupleLiteralPartCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getTupleLiteralPartCSAccess().getOwnedInitExpressionAssignment_3(), "rule__TupleLiteralPartCS__OwnedInitExpressionAssignment_3");
					put(grammarAccess.getNumberLiteralExpCSAccess().getSymbolAssignment(), "rule__NumberLiteralExpCS__SymbolAssignment");
					put(grammarAccess.getStringLiteralExpCSAccess().getSegmentsAssignment(), "rule__StringLiteralExpCS__SegmentsAssignment");
					put(grammarAccess.getBooleanLiteralExpCSAccess().getSymbolAssignment_0(), "rule__BooleanLiteralExpCS__SymbolAssignment_0");
					put(grammarAccess.getBooleanLiteralExpCSAccess().getSymbolAssignment_1(), "rule__BooleanLiteralExpCS__SymbolAssignment_1");
					put(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getOwnedMultiplicityAssignment_1(), "rule__TypeLiteralWithMultiplicityCS__OwnedMultiplicityAssignment_1");
					put(grammarAccess.getTypeLiteralExpCSAccess().getOwnedTypeAssignment(), "rule__TypeLiteralExpCS__OwnedTypeAssignment");
					put(grammarAccess.getTypeNameExpCSAccess().getOwnedPathNameAssignment_0(), "rule__TypeNameExpCS__OwnedPathNameAssignment_0");
					put(grammarAccess.getTypeNameExpCSAccess().getOwnedCurlyBracketedClauseAssignment_1_0(), "rule__TypeNameExpCS__OwnedCurlyBracketedClauseAssignment_1_0");
					put(grammarAccess.getTypeNameExpCSAccess().getOwnedPatternGuardAssignment_1_1_1(), "rule__TypeNameExpCS__OwnedPatternGuardAssignment_1_1_1");
					put(grammarAccess.getTypeExpCSAccess().getOwnedMultiplicityAssignment_1(), "rule__TypeExpCS__OwnedMultiplicityAssignment_1");
					put(grammarAccess.getExpCSAccess().getNameAssignment_0_1_1(), "rule__ExpCS__NameAssignment_0_1_1");
					put(grammarAccess.getExpCSAccess().getOwnedRightAssignment_0_1_2(), "rule__ExpCS__OwnedRightAssignment_0_1_2");
					put(grammarAccess.getPrefixedLetExpCSAccess().getNameAssignment_0_1(), "rule__PrefixedLetExpCS__NameAssignment_0_1");
					put(grammarAccess.getPrefixedLetExpCSAccess().getOwnedRightAssignment_0_2(), "rule__PrefixedLetExpCS__OwnedRightAssignment_0_2");
					put(grammarAccess.getPrefixedPrimaryExpCSAccess().getNameAssignment_0_1(), "rule__PrefixedPrimaryExpCS__NameAssignment_0_1");
					put(grammarAccess.getPrefixedPrimaryExpCSAccess().getOwnedRightAssignment_0_2(), "rule__PrefixedPrimaryExpCS__OwnedRightAssignment_0_2");
					put(grammarAccess.getNameExpCSAccess().getOwnedPathNameAssignment_0(), "rule__NameExpCS__OwnedPathNameAssignment_0");
					put(grammarAccess.getNameExpCSAccess().getOwnedSquareBracketedClausesAssignment_1(), "rule__NameExpCS__OwnedSquareBracketedClausesAssignment_1");
					put(grammarAccess.getNameExpCSAccess().getOwnedRoundBracketedClauseAssignment_2(), "rule__NameExpCS__OwnedRoundBracketedClauseAssignment_2");
					put(grammarAccess.getNameExpCSAccess().getOwnedCurlyBracketedClauseAssignment_3(), "rule__NameExpCS__OwnedCurlyBracketedClauseAssignment_3");
					put(grammarAccess.getNameExpCSAccess().getIsPreAssignment_4_0(), "rule__NameExpCS__IsPreAssignment_4_0");
					put(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsAssignment_2_0_0(), "rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_0_0");
					put(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsAssignment_2_0_1_1(), "rule__CurlyBracketedClauseCS__OwnedPartsAssignment_2_0_1_1");
					put(grammarAccess.getCurlyBracketedClauseCSAccess().getValueAssignment_2_1(), "rule__CurlyBracketedClauseCS__ValueAssignment_2_1");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_0(), "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_0");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_1(), "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_1");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_2_0(), "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_0");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_2_1(), "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_2_1");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_3_0(), "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_0");
					put(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsAssignment_2_3_1(), "rule__RoundBracketedClauseCS__OwnedArgumentsAssignment_2_3_1");
					put(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsAssignment_1(), "rule__SquareBracketedClauseCS__OwnedTermsAssignment_1");
					put(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsAssignment_2_1(), "rule__SquareBracketedClauseCS__OwnedTermsAssignment_2_1");
					put(grammarAccess.getNavigatingArgCSAccess().getOwnedNameExpressionAssignment_0_0(), "rule__NavigatingArgCS__OwnedNameExpressionAssignment_0_0");
					put(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeAssignment_0_1_0_1(), "rule__NavigatingArgCS__OwnedTypeAssignment_0_1_0_1");
					put(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionAssignment_0_1_0_2_1(), "rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_0_2_1");
					put(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionAssignment_0_1_1_1(), "rule__NavigatingArgCS__OwnedInitExpressionAssignment_0_1_1_1");
					put(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeAssignment_1_1(), "rule__NavigatingArgCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getNavigatingBarArgCSAccess().getPrefixAssignment_0(), "rule__NavigatingBarArgCS__PrefixAssignment_0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getOwnedNameExpressionAssignment_1(), "rule__NavigatingBarArgCS__OwnedNameExpressionAssignment_1");
					put(grammarAccess.getNavigatingBarArgCSAccess().getOwnedTypeAssignment_2_1(), "rule__NavigatingBarArgCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getNavigatingBarArgCSAccess().getOwnedInitExpressionAssignment_2_2_1(), "rule__NavigatingBarArgCS__OwnedInitExpressionAssignment_2_2_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getPrefixAssignment_0(), "rule__NavigatingCommaArgCS__PrefixAssignment_0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedNameExpressionAssignment_1(), "rule__NavigatingCommaArgCS__OwnedNameExpressionAssignment_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeAssignment_2_0_1(), "rule__NavigatingCommaArgCS__OwnedTypeAssignment_2_0_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionAssignment_2_0_2_1(), "rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_0_2_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionAssignment_2_1_1(), "rule__NavigatingCommaArgCS__OwnedInitExpressionAssignment_2_1_1");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getPrefixAssignment_0(), "rule__NavigatingSemiArgCS__PrefixAssignment_0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedNameExpressionAssignment_1(), "rule__NavigatingSemiArgCS__OwnedNameExpressionAssignment_1");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedTypeAssignment_2_1(), "rule__NavigatingSemiArgCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedInitExpressionAssignment_2_2_1(), "rule__NavigatingSemiArgCS__OwnedInitExpressionAssignment_2_2_1");
					put(grammarAccess.getIfExpCSAccess().getOwnedConditionAssignment_1(), "rule__IfExpCS__OwnedConditionAssignment_1");
					put(grammarAccess.getIfExpCSAccess().getOwnedThenExpressionAssignment_3(), "rule__IfExpCS__OwnedThenExpressionAssignment_3");
					put(grammarAccess.getIfExpCSAccess().getOwnedIfThenExpressionsAssignment_4(), "rule__IfExpCS__OwnedIfThenExpressionsAssignment_4");
					put(grammarAccess.getIfExpCSAccess().getOwnedElseExpressionAssignment_6(), "rule__IfExpCS__OwnedElseExpressionAssignment_6");
					put(grammarAccess.getElseIfThenExpCSAccess().getOwnedConditionAssignment_1(), "rule__ElseIfThenExpCS__OwnedConditionAssignment_1");
					put(grammarAccess.getElseIfThenExpCSAccess().getOwnedThenExpressionAssignment_3(), "rule__ElseIfThenExpCS__OwnedThenExpressionAssignment_3");
					put(grammarAccess.getLetExpCSAccess().getOwnedVariablesAssignment_1(), "rule__LetExpCS__OwnedVariablesAssignment_1");
					put(grammarAccess.getLetExpCSAccess().getOwnedVariablesAssignment_2_1(), "rule__LetExpCS__OwnedVariablesAssignment_2_1");
					put(grammarAccess.getLetExpCSAccess().getOwnedInExpressionAssignment_4(), "rule__LetExpCS__OwnedInExpressionAssignment_4");
					put(grammarAccess.getLetVariableCSAccess().getNameAssignment_0(), "rule__LetVariableCS__NameAssignment_0");
					put(grammarAccess.getLetVariableCSAccess().getOwnedRoundBracketedClauseAssignment_1(), "rule__LetVariableCS__OwnedRoundBracketedClauseAssignment_1");
					put(grammarAccess.getLetVariableCSAccess().getOwnedTypeAssignment_2_1(), "rule__LetVariableCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getLetVariableCSAccess().getOwnedInitExpressionAssignment_4(), "rule__LetVariableCS__OwnedInitExpressionAssignment_4");
					put(grammarAccess.getNestedExpCSAccess().getOwnedExpressionAssignment_1(), "rule__NestedExpCS__OwnedExpressionAssignment_1");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getLowerBoundAssignment_0(), "rule__MultiplicityBoundsCS__LowerBoundAssignment_0");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getUpperBoundAssignment_1_1(), "rule__MultiplicityBoundsCS__UpperBoundAssignment_1_1");
					put(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAssignment(), "rule__MultiplicityStringCS__StringBoundsAssignment");
					put(grammarAccess.getPathNameCSAccess().getOwnedPathElementsAssignment_0(), "rule__PathNameCS__OwnedPathElementsAssignment_0");
					put(grammarAccess.getPathNameCSAccess().getOwnedPathElementsAssignment_1_1(), "rule__PathNameCS__OwnedPathElementsAssignment_1_1");
					put(grammarAccess.getFirstPathElementCSAccess().getReferredElementAssignment(), "rule__FirstPathElementCS__ReferredElementAssignment");
					put(grammarAccess.getNextPathElementCSAccess().getReferredElementAssignment(), "rule__NextPathElementCS__ReferredElementAssignment");
					put(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsAssignment_0(), "rule__TemplateBindingCS__OwnedSubstitutionsAssignment_0");
					put(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsAssignment_1_1(), "rule__TemplateBindingCS__OwnedSubstitutionsAssignment_1_1");
					put(grammarAccess.getTemplateBindingCSAccess().getOwnedMultiplicityAssignment_2(), "rule__TemplateBindingCS__OwnedMultiplicityAssignment_2");
					put(grammarAccess.getTemplateParameterSubstitutionCSAccess().getOwnedActualParameterAssignment(), "rule__TemplateParameterSubstitutionCS__OwnedActualParameterAssignment");
					put(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersAssignment_1(), "rule__TemplateSignatureCS__OwnedParametersAssignment_1");
					put(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersAssignment_2_1(), "rule__TemplateSignatureCS__OwnedParametersAssignment_2_1");
					put(grammarAccess.getTypeParameterCSAccess().getNameAssignment_0(), "rule__TypeParameterCS__NameAssignment_0");
					put(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsAssignment_1_1(), "rule__TypeParameterCS__OwnedExtendsAssignment_1_1");
					put(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsAssignment_1_2_1(), "rule__TypeParameterCS__OwnedExtendsAssignment_1_2_1");
					put(grammarAccess.getTypedTypeRefCSAccess().getOwnedPathNameAssignment_0(), "rule__TypedTypeRefCS__OwnedPathNameAssignment_0");
					put(grammarAccess.getTypedTypeRefCSAccess().getOwnedBindingAssignment_1_1(), "rule__TypedTypeRefCS__OwnedBindingAssignment_1_1");
					put(grammarAccess.getWildcardTypeRefCSAccess().getOwnedExtendsAssignment_2_1(), "rule__WildcardTypeRefCS__OwnedExtendsAssignment_2_1");
					put(grammarAccess.getMappingOperationHeaderCSAccess().getUnorderedGroup_8(), "rule__MappingOperationHeaderCS__UnorderedGroup_8");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.eclipse.qvto.examples.xtext.qvtoperational.ui.contentassist.antlr.internal.InternalQVTOperationalParser typedParser = (org.eclipse.qvto.examples.xtext.qvtoperational.ui.contentassist.antlr.internal.InternalQVTOperationalParser) parser;
			typedParser.entryRuleTopLevelCS();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public QVTOperationalGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(QVTOperationalGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
