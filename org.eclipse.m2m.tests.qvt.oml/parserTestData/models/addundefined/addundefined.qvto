transformation addundefined;

modeltype ECORE uses 'http://www.eclipse.org/emf/2002/Ecore';

mapping main(in model: ecore::EPackage): ecore::EPackage {
    	name := 'arithmetic with undefined';
    	eClassifiers += test(1.0 + invalid, 0);
    	eClassifiers += test(1.0 - invalid, 1);
    	eClassifiers += test(1.0 * invalid, 2);
    	eClassifiers += test(1.0 / invalid, 3);
    	eClassifiers += test(1.0.max(invalid), 4);
    	eClassifiers += test(1.0.min(invalid), 5);
    	eClassifiers += test(1.0 < invalid, 6);
    	eClassifiers += test(1.0 > invalid, 7);
    	eClassifiers += test(1.0 = invalid, 8);
    	eClassifiers += test(1.0 <= invalid, 9);
    	eClassifiers += test(1.0 >= invalid, 10);
    	eClassifiers += test(1.0 <> invalid, 11);

    	eClassifiers += test(1 + invalid, 12);
    	eClassifiers += test(1 - invalid, 13);
    	eClassifiers += test(1 * invalid, 14);
    	eClassifiers += test(1 / invalid, 15);
    	eClassifiers += test(1.mod(invalid), 16);
    	eClassifiers += test(1.div(invalid), 17);
    	eClassifiers += test(1.max(invalid), 18);
    	eClassifiers += test(1.min(invalid), 19);
    	eClassifiers += test(1 < invalid, 20);
    	eClassifiers += test(1 > invalid, 21);
    	eClassifiers += test(1 = invalid, 22);
    	eClassifiers += test(1 <= invalid, 23);
    	eClassifiers += test(1 >= invalid, 24);
    	eClassifiers += test(1 <> invalid, 25);
} 

mapping test(in value : OclAny, inout fakeIndex : Integer) : ecore::EClass {
	name := 
		if value.oclIsUndefined() then
			'ok'
		else
			'fail'
		endif;
}