modeltype ecore "strict" uses 'http://www.eclipse.org/emf/2002/Ecore';

transformation bug467325();

main() {
	assert fatal (Tuple {p="ok", i=10}.getString() = "fooReal10");
	assert fatal (Tuple {p="ok", o=object EPackage{}}.getString() = "foo_ok");
	
	var v : Tuple(p:String,i:Integer) := Tuple {p="ok", i=11}; 
	assert fatal (v.getString() = "fooReal11");
	
	assert fatal(1.foo() = "fooInt");
	assert fatal(1.0.foo() = "fooReal");
	
	assert fatal(List{1}->foo2() = "fooInt"); 
	assert fatal(List{1.0}->foo2() = "fooReal");
	assert fatal(Sequence{1}->foo2() = "fooReal");
	assert fatal(Sequence{1.0}->foo2() = "fooReal");
	
	assert fatal(List{object EPackage{}}->foo2() = "fooObj");
}

query Tuple(p:String, i:Real)::getString() : String {
	return "fooReal" + self.i.toString()
}

query Tuple(p:String, o:EModelElement)::getString() : String {
	return "foo_" + self.p
}

query Integer::foo() : String  {
	return "fooInt"
}

query Real::foo() : String  {
	return "fooReal"
}

query List(Integer)::foo2() : String  {
	return "fooInt"
}

query Collection(Real)::foo2() : String  {
	return "fooReal"
}

query Collection(EModelElement)::foo2() : String  {
	return "fooObj"
}

