modeltype ECORE uses 'http://www.eclipse.org/emf/2002/Ecore';

transformation populationSection(in inModel : ECORE, out outModel : ECORE);

main() {
	var _result : EPackage := null;
	object _result :  EPackage { 
		-- test var is initialized first, then the body is executed
		name := if(_result <> null) then 'results' else null endif;
		eClassifiers +=	map populationSimple();
		eClassifiers +=	map populationUpdateVarOnly();
		eClassifiers +=	map populationMany();
		eSubpackages += map populationNestedUpdateCreate();
		eSubpackages += object EClass {}.map allowSelfModify(object EPackage {});	
	};
	
	_result.map populationInOut(object EClass {}, object EAttribute {});
	this.map populationLocalVar(_result);
	_result.map allowSelfModifyNoResult();
}

mapping populationSimple(): EClass {
	init { 	
	}
	population {
		object result : EClass { -- reports variable type mismatch
        	name := 'populationSimple' 
		}
	}
	end {
		assert fatal (result.name = 'populationSimple');
	}
}

mapping populationUpdateVarOnly(): EClass {
	init { 	
	}
	population {
		object result : { -- reports variable type mismatch
        	name := 'populationUpdateVarOnly' 
		}
	}
	end {
		assert fatal (result.name = 'populationUpdateVarOnly');
	}
}

mapping populationMany(): EClass {
	init { 	
	}
	population {
		object result : EClass { -- reports variable type mismatch
        	name := 'wops' 
		};
		object result : EClass { -- reports variable type mismatch
        	name := 'populationMany' 
		}
	}
	end {
		assert fatal (result.name = 'populationMany');
	}
}


mapping inout EPackage::populationInOut(inout par1 : EClass, inout par2 : EStructuralFeature) : EPackage {
	init {
		par1.name := 'init_populationInOut';
		result := self;
	}
	population {
		
		object result : EPackage {
        	eSubpackages += object EPackage { name := par1.name };  
        	eClassifiers += par1;
		};
			
		object par1: {
			name := 'setFrom_populationInOut'; -- tests sequencing with the objectexp above
			eStructuralFeatures += par2;			
		};
		
		object par2 : EStructuralFeature {
			name := 'a';
			eAnnotations += object EAnnotation {};
		}
	}
}


mapping populationLocalVar(inout par1 : EPackage) {
	init {
		var refToPar1 := par1;
	}
	population {
		object refToPar1 : {
			name := refToPar1.name + '-populationLocalVar';
		};
	}
}

mapping populationNestedUpdateCreate(): EPackage {
	population {
		object result : EPackage {
			name := 'populationNestedUpdateCreate';
			eClassifiers += object EClass {
				name := 'populationNestedUpdateCreate_NestedClass';
				eStructuralFeatures += object EAttribute { name := 'populationNestedUpdateCreate_EAttr'};
			}
		}
	}
}

mapping inout EClass::allowSelfModify(inout returned : EPackage) : EPackage {
	init {
		result := returned;
	}
	population {
		object self: EClass {
			name := 'allowSelfModify_Class';
		};
		object result: EPackage {
			eClassifiers += self;
			name := 'allowSelfModify_Package';
		}
	}
}

mapping inout EPackage::allowSelfModifyNoResult() {
	population {
		object self: EPackage {
			name := self.name + '-allowSelfModifyNoResult';
		};
	}
}
