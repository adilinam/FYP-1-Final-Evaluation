modeltype ECORE uses 'http://www.eclipse.org/emf/2002/Ecore';

transformation inoutMapping(in inModel : ECORE, out outModel : ECORE);

main() {
	var _result : EPackage := null;
	object _result :  EPackage { 
		-- test var is initialized first, then the body is executed
		name := if(_result <> null) then 'results' else null endif;
	};
	
	_result.map updateSelfWithNoResult();
	_result.map updateSelfWithResult();
	_result.map passedNullInout(null);
}

mapping inout EPackage::updateSelfWithNoResult() {
	init {
		object self: {
			eClassifiers += object EClass {
				name := 'updateSelfWithNoResult';
			}
		}
	}
}

mapping inout EPackage::updateSelfWithResult() : EClass {
	init {
		result := object EClass { 
			name := 'updateSelfWithResult';
		};
		
		object self : EPackage {
			eClassifiers += result;
		}
	}
}

mapping inout EPackage::passedNullInout(inout eClass : EClass ) : EClass {
	init {
		assert fatal (eClass.oclIsUndefined());
		result := object eClass : EClass { 
			name := 'passedNullInout';
		};
		
		assert fatal (outModel.objects()->includes(result));

		self.eClassifiers += eClass;
	}
	
	end {
		assert fatal (eClass = result and eClass.name = 'passedNullInout');		
	}
}