modeltype Ecore uses "http://www.eclipse.org/emf/2002/Ecore";

transformation objectExpBodyExpressions_253051(in dummy : Ecore, out model : Ecore);

main() {
	var ePackage := object EPackage { name := 'a' };
	ePackage.eClassifiers += ePackage.map toEClass1();
	ePackage.eClassifiers += ePackage.map toEClass2();
	ePackage.eClassifiers += ePackage.map toEClass3();
	ePackage.eClassifiers += ePackage.map toEClass4();
	ePackage.eClassifiers += ePackage.map toEClass5();
	ePackage.eClassifiers += ePackage.map toEClass6();
	ePackage.eClassifiers += ePackage.map toEClass7('parameterValue');
	ePackage.eClassifiers += ePackage.map toEClass8('parameterValue');
}

mapping EPackage::toEClass1() : EClass {
	population {
		object result : {
		}
	}
}

mapping EPackage::toEClass2() : EClass {
	population {
		object result : {
			name := self.name;
		}
	}
}

mapping EPackage::toEClass3() : EClass {
	population {
		object result : EClass {
			var x := 'localVariable';
			name := x;
		}
	}
}

mapping EPackage::toEClass4() : EClass {
	population {
		object result : {
			var x := 'ifExp';
			if x = 'ifExp' then {
				name := x;
			} else {
				name := 'wrong';
			} endif;
		}
	}
}

mapping EPackage::toEClass5() : EClass {
	population {
		object result : EClass {
			result.name := 'initial';
			var name := 'clashingName';
			result.name := name + '_';
		}
	}
}

mapping EPackage::toEClass6() : EClass {
	population {
		object result : {
			result.name := 'initial';
			var name := 'clashingName';
			var x := name + '_' + 'ifExp';
			if (x = name + '_' + 'ifExp') then {
				name := '_' + x;
			} else {
				name := 'wrong';
			} endif;
			result.name := name + '_';
		}
	}
}

mapping EPackage::toEClass7(name : String) : EClass {
	population {
		object result : EClass {
			result.name := 'initialValue';
			var x := '_' + name;
			result.name := x + '+' + result.name;
		}
	}
}

mapping inout EPackage::toEClass8(name : String) : EClass {
	population {
		var x := object EClass {
			result.name := 'initialValue2';
			var y := '_' + name;
			result.name := y + '+' + result.name;
			assert fatal (true) with log('assertion1');
		};
		assert fatal (x <> null) with log('assertion2');
		x.name := 'x';
		self.eClassifiers += x;
	}
}