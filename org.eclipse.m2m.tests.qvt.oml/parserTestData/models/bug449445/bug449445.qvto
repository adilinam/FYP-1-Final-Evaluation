modeltype ecore uses "http://www.eclipse.org/emf/2002/Ecore";

transformation bug449445;

property c : Collection(String) = OrderedSet { 'a' , 'b' };

main() {

	assert fatal (c = OrderedSet{'a', 'b'});
	
	var c2 : Collection(String) = c;
	
	c += "c";	
	assert fatal (c->includes("c"));
	assert fatal (c2 = OrderedSet{'a', 'b'});
	
	c += invalid;
	assert fatal (c = OrderedSet{'a', 'b', 'c'});
	
	c += null;
	assert fatal (c->includes(null));
	
	c := Sequence {};
	c += 'a';
	c += 'a';
	assert fatal (c->size() = 2);
	

	var cls := object EClass { name:="foo" };
	assert fatal (cls.name = "foo");

	cls.name := invalid;
	assert fatal (cls.name = null);
	
	cls.eAnnotations += object EAnnotation{};
	assert fatal (cls.eAnnotations->size() = 1);

	cls.eAnnotations += invalid;
	assert fatal (cls.eAnnotations->size() = 1);
	
	cls.eAnnotations := invalid;
	assert fatal (cls.eAnnotations->size() = 0);


	var vb : Boolean := invalid;
	assert fatal (vb.oclIsInvalid());

	var vi : Integer := invalid;
	assert fatal (vi.oclIsInvalid());

	var vr : Real := invalid;
	assert fatal (vr.oclIsInvalid());

	var voa : OclAny := invalid;
	assert fatal (voa.oclIsInvalid());

	var vov : OclVoid := invalid;
	assert fatal (vov.oclIsInvalid());

	var voi : OclInvalid := invalid;
	assert fatal (voi.oclIsInvalid());

	var vu : UnlimitedNatural := invalid;
	assert fatal (vu.oclIsInvalid());

	var vs : String := invalid;
	assert fatal (vs.oclIsInvalid());

	var cc1 : Collection(OclAny) := invalid;
	assert fatal (cc1->size().oclIsInvalid());
	cc1 += invalid;
	assert fatal (cc1->size().oclIsInvalid());

	var cc2 : Sequence(OclVoid) := invalid;
	assert fatal (cc2->size().oclIsInvalid());
	cc2 += invalid;
	assert fatal (cc2->size().oclIsInvalid());
	
	var reals : Set(Real) = Set{};
	reals := Set{1};
	assert fatal (reals->includes(1.0));
	reals += 1.0;
	assert fatal (reals = Set{1.0});


	var c = object EClass {};
	var e = object EPackage {
		eClassifiers := c;
	};
	e.eClassifiers := OrderedSet{object EClass {}, null};
	
	assert fatal (not e.eClassifiers->includes(c));
}
