transformation bug224094;

main() {
	var c1 := Sequence {null, null};
	assert fatal (c1->size() = 2);
	assert fatal (c1->includes(null));

	var c2 := Set {null, null};
	assert fatal (c2->size() = 1);
	assert fatal (c2->includes(null));

	var c3 := OrderedSet {null, null};
	assert fatal (c3->size() = 1);
	assert fatal (c3->includes(null));

	var c4 := Bag {null, null};
	assert fatal (c4->size() = 2);
	assert fatal (c4->includes(null));

	var c5 := Dict {null="", null=""};
	assert fatal (c5->size() = 1);
	assert fatal (c5->get(null) = "");
	assert fatal (c5->includes(""));
	assert fatal (c5->hasKey(null));
	
	var c6 : List(OclAny) := List {null, null};
	assert fatal (c6->size() = 2);
	assert fatal (c6->includes(null));

	var c7 : List(OclAny) := List {null, invalid};
	assert fatal (c7->size().oclIsInvalid());

	var bound1 : Integer = invalid;
	var c8 : List(Integer) = List{1 .. bound1};
	assert fatal (c8->size().oclIsInvalid());
	
	var bound2 : Integer = 3;
	var c9 : List(Integer) = List{1 .. bound2};
	assert fatal (c9->size() = 3);	
}
